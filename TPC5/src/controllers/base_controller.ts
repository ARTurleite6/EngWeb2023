import { Todo } from "../models/todo.js";

let editTodo: Todo | null = null;

export function setEditTodo(todo: Todo | null) {
    editTodo = todo;
}

const htmlHeader = `
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8"/>
        <link rel="icon" href="favicon.png"/>
        <link rel="stylesheet" href="w3.css"/>
        <title>Todo List</title>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-purple">
                <h2>Todo List</h2>
            </header>

`;

function htmlFooter(date: string): string {
    return `
    <footer class="w3-row w3-container w3-purple">
    <h5>Generated by EngWeb2023 in ${date}</h5>
</footer>
</div>
</body>
</html>

`;
}

const todoForm = `
<form class="w3-container" action="/todos/addTodo" method="post">
            <fieldset>
                <legend>Add Todo</legend>
                <label for="when"> When </label>
                <input class="w3-input w3-round" type="date" name="when" id="when" required>
                <label class="w3-input w3-round" for="what"> What </label>
                <input class="w3-input w3-round" type="text" name="what" id="what" required>
                <label for="who"> Who </label>
                <input class="w3-input w3-round" type="text" name="who" id="who" required>
                <input class="w3-btn w3-purple w3-mb-2" type="submit" value="Add Todo">
            </fieldset>

        </form>  
`;

function editTodoForm(todo: Todo | null): string {

    let page = `
        <form class="w3-container" action="/todos/editTodo/${todo?.id ?? -1}" method="post">
            <fieldset>
                <legend>Edit Todo</legend>
                <label for="when"> When </label>
    `;
    if (todo != null) {
        page += `
                <input class="w3-input w3-round" type="date" name="when" id="when" value="${todo.when}" required>
                <label class="w3-input w3-round" for="what"> What </label>
                <input class="w3-input w3-round" type="text" name="what" id="what" value="${todo.what}" required>
                <label for="who"> Who </label>
                <input class="w3-input w3-round" type="text" name="who" id="who" value="${todo.who}" required>
                <input class="w3-btn w3-purple w3-mb-2" type="submit" value="Edit Todo">
        `;
    } else {
        page += `
                <input class="w3-input w3-round" type="date" name="when" id="when" required>
                <label class="w3-input w3-round" for="what"> What </label>
                <input class="w3-input w3-round" type="text" name="what" id="what" required>
                <label for="who">Who</label>
                <input class="w3-input w3-round" type="text" name="who" id="who" required>
                <input class="w3-btn w3-purple w3-mb-2" type="submit" value="Edit Todo" disabled>
                `
    }

    return page + `
            </fieldset>

        </form>  `;
}

function todosTable(todos: Todo[]): string {
    let page = `
        <table class="w3-table w3-striped w3-bordered w3-border w3-hoverable w3-white">
            <tr>
                <th>When</th>
                <th>What</th>
                <th>Who</th>
                <th>Status</th>
            </tr>
    `;
    for (let todo of todos) {
        page += `
            <tr>
                <td>${todo.when}</td>
                <td>${todo.what}</td>
                <td>${todo.who}</td>
                <td>
                <form>
                <input formmethod="post" formaction="/todos/markDone/${todo.id}" class="w3-btn w3-purple w3-mb-2" type="submit" value="Done">
                <input formmethod="get" formaction="/todos/editTodo/${todo.id}" class="w3-btn w3-purple w3-mb-2" type="submit" value="Edit" disable/>
                </form>
                </td>
            </tr>
        `;
    }
    return page + `
        </table>
        `
}

function notDoneTodos(notDoneTodos: Todo[]): string {
    if (notDoneTodos.length == 0) {
        return `
                    <p>There are no todos to do</p>
                `;
    }

    return todosTable(notDoneTodos);
}

function doneTodos(doneTodos: Todo[]): string {
    if (doneTodos.length == 0) {
        return `
                    <p>There are no todos done</p>
                `;
    }
    return todosTable(doneTodos);
}

function todosList(todos: Todo[]): string {
    return `
        <div class="w3-row">
            <div class="w3-col m6 w3-center">
                ${notDoneTodos(todos.filter(t => !t.done))}
            </div>
            <div class="w3-col m6 w3-center">
                ${doneTodos(todos.filter(t => t.done))}
            </div>
        </div>
    `;
}

export function initialPage(date: string, todos: Todo[]): string {
    return htmlHeader + todoForm + editTodoForm(editTodo) + todosList(todos) + htmlFooter(date);
}
